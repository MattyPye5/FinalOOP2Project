<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="Movie_FinalDB_ProjectDataSet" targetNamespace="http://tempuri.org/Movie_FinalDB_ProjectDataSet1.xsd" xmlns:mstns="http://tempuri.org/Movie_FinalDB_ProjectDataSet1.xsd" xmlns="http://tempuri.org/Movie_FinalDB_ProjectDataSet1.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="Movie_FinalDB_ProjectConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="Movie_FinalDB_ProjectConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.FinalOOP2Project.Properties.Settings.GlobalReference.Default.Movie_FinalDB_ProjectConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ManagerTableAdapter" GeneratorDataComponentClassName="ManagerTableAdapter" Name="Manager" UserDataComponentName="ManagerTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="Movie_FinalDB_ProjectConnectionString (Settings)" DbObjectName="dbo.Manager" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Manager] WHERE (([ManagerID] = @Original_ManagerID) AND ((@IsNull_ManagerUsername = 1 AND [ManagerUsername] IS NULL) OR ([ManagerUsername] = @Original_ManagerUsername)) AND ((@IsNull_ManagerPassword = 1 AND [ManagerPassword] IS NULL) OR ([ManagerPassword] = @Original_ManagerPassword)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ManagerID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ManagerID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_ManagerUsername" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ManagerUsername" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_ManagerUsername" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ManagerUsername" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_ManagerPassword" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ManagerPassword" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_ManagerPassword" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ManagerPassword" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Manager] ([ManagerID], [ManagerUsername], [ManagerPassword]) VALUES (@ManagerID, @ManagerUsername, @ManagerPassword);
SELECT ManagerID, ManagerUsername, ManagerPassword FROM Manager WHERE (ManagerID = @ManagerID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ManagerID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ManagerID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@ManagerUsername" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ManagerUsername" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@ManagerPassword" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ManagerPassword" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ManagerID, ManagerUsername, ManagerPassword FROM dbo.Manager</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Manager] SET [ManagerID] = @ManagerID, [ManagerUsername] = @ManagerUsername, [ManagerPassword] = @ManagerPassword WHERE (([ManagerID] = @Original_ManagerID) AND ((@IsNull_ManagerUsername = 1 AND [ManagerUsername] IS NULL) OR ([ManagerUsername] = @Original_ManagerUsername)) AND ((@IsNull_ManagerPassword = 1 AND [ManagerPassword] IS NULL) OR ([ManagerPassword] = @Original_ManagerPassword)));
SELECT ManagerID, ManagerUsername, ManagerPassword FROM Manager WHERE (ManagerID = @ManagerID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ManagerID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ManagerID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@ManagerUsername" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ManagerUsername" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@ManagerPassword" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ManagerPassword" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ManagerID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ManagerID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_ManagerUsername" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ManagerUsername" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_ManagerUsername" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ManagerUsername" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_ManagerPassword" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ManagerPassword" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_ManagerPassword" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ManagerPassword" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ManagerID" DataSetColumn="ManagerID" />
              <Mapping SourceColumn="ManagerUsername" DataSetColumn="ManagerUsername" />
              <Mapping SourceColumn="ManagerPassword" DataSetColumn="ManagerPassword" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="MoviesTableAdapter" GeneratorDataComponentClassName="MoviesTableAdapter" Name="Movies" UserDataComponentName="MoviesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="Movie_FinalDB_ProjectConnectionString (Settings)" DbObjectName="dbo.Movies" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Movies] WHERE (([MovieId] = @Original_MovieId) AND ([MovieName] = @Original_MovieName) AND ([Genre] = @Original_Genre) AND ([DateOfRelease] = @Original_DateOfRelease) AND ([Actors] = @Original_Actors))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_MovieId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MovieId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_MovieName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="MovieName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Genre" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Genre" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_DateOfRelease" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="DateOfRelease" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Actors" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Actors" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Movies] ([MovieId], [MovieName], [Genre], [DateOfRelease], [Actors]) VALUES (@MovieId, @MovieName, @Genre, @DateOfRelease, @Actors);
SELECT MovieId, MovieName, Genre, DateOfRelease, Actors FROM Movies WHERE (MovieId = @MovieId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@MovieId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MovieId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@MovieName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="MovieName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Genre" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Genre" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@DateOfRelease" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="DateOfRelease" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Actors" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Actors" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT MovieId, MovieName, Genre, DateOfRelease, Actors FROM dbo.Movies</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Movies] SET [MovieId] = @MovieId, [MovieName] = @MovieName, [Genre] = @Genre, [DateOfRelease] = @DateOfRelease, [Actors] = @Actors WHERE (([MovieId] = @Original_MovieId) AND ([MovieName] = @Original_MovieName) AND ([Genre] = @Original_Genre) AND ([DateOfRelease] = @Original_DateOfRelease) AND ([Actors] = @Original_Actors));
SELECT MovieId, MovieName, Genre, DateOfRelease, Actors FROM Movies WHERE (MovieId = @MovieId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@MovieId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MovieId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@MovieName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="MovieName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Genre" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Genre" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@DateOfRelease" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="DateOfRelease" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Actors" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Actors" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_MovieId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MovieId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_MovieName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="MovieName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Genre" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Genre" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_DateOfRelease" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="DateOfRelease" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Actors" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Actors" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="MovieId" DataSetColumn="MovieId" />
              <Mapping SourceColumn="MovieName" DataSetColumn="MovieName" />
              <Mapping SourceColumn="Genre" DataSetColumn="Genre" />
              <Mapping SourceColumn="DateOfRelease" DataSetColumn="DateOfRelease" />
              <Mapping SourceColumn="Actors" DataSetColumn="Actors" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="MovieTicketUserTableAdapter" GeneratorDataComponentClassName="MovieTicketUserTableAdapter" Name="MovieTicketUser" UserDataComponentName="MovieTicketUserTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="Movie_FinalDB_ProjectConnectionString (Settings)" DbObjectName="dbo.MovieTicketUser" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[MovieTicketUser] WHERE (([MovieId] = @Original_MovieId) AND ([TicketId] = @Original_TicketId) AND ([UserId] = @Original_UserId))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_MovieId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MovieId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TicketId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TicketId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_UserId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UserId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[MovieTicketUser] ([MovieId], [TicketId], [UserId]) VALUES (@MovieId, @TicketId, @UserId);
SELECT MovieId, TicketId, UserId FROM MovieTicketUser WHERE (MovieId = @MovieId) AND (TicketId = @TicketId) AND (UserId = @UserId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@MovieId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MovieId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@TicketId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TicketId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@UserId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UserId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT MovieId, TicketId, UserId FROM dbo.MovieTicketUser</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[MovieTicketUser] SET [MovieId] = @MovieId, [TicketId] = @TicketId, [UserId] = @UserId WHERE (([MovieId] = @Original_MovieId) AND ([TicketId] = @Original_TicketId) AND ([UserId] = @Original_UserId));
SELECT MovieId, TicketId, UserId FROM MovieTicketUser WHERE (MovieId = @MovieId) AND (TicketId = @TicketId) AND (UserId = @UserId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@MovieId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MovieId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@TicketId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TicketId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@UserId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UserId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_MovieId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MovieId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TicketId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TicketId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_UserId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UserId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="MovieId" DataSetColumn="MovieId" />
              <Mapping SourceColumn="TicketId" DataSetColumn="TicketId" />
              <Mapping SourceColumn="UserId" DataSetColumn="UserId" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ScreenRoomTableAdapter" GeneratorDataComponentClassName="ScreenRoomTableAdapter" Name="ScreenRoom" UserDataComponentName="ScreenRoomTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="Movie_FinalDB_ProjectConnectionString (Settings)" DbObjectName="dbo.ScreenRoom" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[ScreenRoom] WHERE (([ScreenRoomId] = @Original_ScreenRoomId) AND ([MovieId] = @Original_MovieId) AND ([RoomNo] = @Original_RoomNo) AND ([TotalSeatNo] = @Original_TotalSeatNo))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ScreenRoomId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ScreenRoomId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_MovieId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MovieId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_RoomNo" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="RoomNo" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TotalSeatNo" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TotalSeatNo" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[ScreenRoom] ([MovieId], [RoomNo], [TotalSeatNo]) VALUES (@MovieId, @RoomNo, @TotalSeatNo);
SELECT ScreenRoomId, MovieId, RoomNo, TotalSeatNo FROM ScreenRoom WHERE (ScreenRoomId = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@MovieId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MovieId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@RoomNo" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="RoomNo" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@TotalSeatNo" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TotalSeatNo" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ScreenRoomId, MovieId, RoomNo, TotalSeatNo FROM dbo.ScreenRoom</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[ScreenRoom] SET [MovieId] = @MovieId, [RoomNo] = @RoomNo, [TotalSeatNo] = @TotalSeatNo WHERE (([ScreenRoomId] = @Original_ScreenRoomId) AND ([MovieId] = @Original_MovieId) AND ([RoomNo] = @Original_RoomNo) AND ([TotalSeatNo] = @Original_TotalSeatNo));
SELECT ScreenRoomId, MovieId, RoomNo, TotalSeatNo FROM ScreenRoom WHERE (ScreenRoomId = @ScreenRoomId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@MovieId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MovieId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@RoomNo" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="RoomNo" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@TotalSeatNo" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TotalSeatNo" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ScreenRoomId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ScreenRoomId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_MovieId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MovieId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_RoomNo" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="RoomNo" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TotalSeatNo" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TotalSeatNo" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="ScreenRoomId" ColumnName="ScreenRoomId" DataSourceName="[5D11E7DA0521CF5E99DDCEB62ADB8904_OCUMENTS\SEMESTER 3\OOP 2\FINALPROJ\FINALOOP2PROJECT\FINALOOP2PROJECT\MOVIE_FINALDB_PROJECT.MDF].dbo.ScreenRoom" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@ScreenRoomId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ScreenRoomId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ScreenRoomId" DataSetColumn="ScreenRoomId" />
              <Mapping SourceColumn="MovieId" DataSetColumn="MovieId" />
              <Mapping SourceColumn="RoomNo" DataSetColumn="RoomNo" />
              <Mapping SourceColumn="TotalSeatNo" DataSetColumn="TotalSeatNo" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ShowTimeTableAdapter" GeneratorDataComponentClassName="ShowTimeTableAdapter" Name="ShowTime" UserDataComponentName="ShowTimeTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="Movie_FinalDB_ProjectConnectionString (Settings)" DbObjectName="dbo.ShowTime" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[ShowTime] WHERE (([ShowTimeId] = @Original_ShowTimeId) AND ([MovieId] = @Original_MovieId) AND ([ScreenRoomId] = @Original_ScreenRoomId) AND ((@IsNull_Time = 1 AND [Time] IS NULL) OR ([Time] = @Original_Time)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ShowTimeId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ShowTimeId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_MovieId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MovieId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ScreenRoomId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ScreenRoomId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Time" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Time" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_Time" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="Time" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[ShowTime] ([MovieId], [ScreenRoomId], [Time]) VALUES (@MovieId, @ScreenRoomId, @Time);
SELECT ShowTimeId, MovieId, ScreenRoomId, Time FROM ShowTime WHERE (ShowTimeId = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@MovieId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MovieId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ScreenRoomId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ScreenRoomId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Time" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="Time" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ShowTimeId, MovieId, ScreenRoomId, Time FROM dbo.ShowTime</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[ShowTime] SET [MovieId] = @MovieId, [ScreenRoomId] = @ScreenRoomId, [Time] = @Time WHERE (([ShowTimeId] = @Original_ShowTimeId) AND ([MovieId] = @Original_MovieId) AND ([ScreenRoomId] = @Original_ScreenRoomId) AND ((@IsNull_Time = 1 AND [Time] IS NULL) OR ([Time] = @Original_Time)));
SELECT ShowTimeId, MovieId, ScreenRoomId, Time FROM ShowTime WHERE (ShowTimeId = @ShowTimeId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@MovieId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MovieId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ScreenRoomId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ScreenRoomId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Time" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="Time" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ShowTimeId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ShowTimeId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_MovieId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MovieId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ScreenRoomId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ScreenRoomId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Time" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Time" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_Time" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="Time" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="ShowTimeId" ColumnName="ShowTimeId" DataSourceName="[5D11E7DA0521CF5E99DDCEB62ADB8904_OCUMENTS\SEMESTER 3\OOP 2\FINALPROJ\FINALOOP2PROJECT\FINALOOP2PROJECT\MOVIE_FINALDB_PROJECT.MDF].dbo.ShowTime" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@ShowTimeId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ShowTimeId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ShowTimeId" DataSetColumn="ShowTimeId" />
              <Mapping SourceColumn="MovieId" DataSetColumn="MovieId" />
              <Mapping SourceColumn="ScreenRoomId" DataSetColumn="ScreenRoomId" />
              <Mapping SourceColumn="Time" DataSetColumn="Time" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TicketTableAdapter" GeneratorDataComponentClassName="TicketTableAdapter" Name="Ticket" UserDataComponentName="TicketTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="Movie_FinalDB_ProjectConnectionString (Settings)" DbObjectName="dbo.Ticket" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Ticket] WHERE (([ticketId] = @Original_ticketId) AND ([E_ticket] = @Original_E_ticket) AND ([availability] = @Original_availability))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ticketId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ticketId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_E_ticket" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="E_ticket" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_availability" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="availability" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Ticket] ([E_ticket], [availability]) VALUES (@E_ticket, @availability);
SELECT ticketId, E_ticket, availability FROM Ticket WHERE (ticketId = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@E_ticket" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="E_ticket" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@availability" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="availability" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ticketId, E_ticket, availability FROM dbo.Ticket</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Ticket] SET [E_ticket] = @E_ticket, [availability] = @availability WHERE (([ticketId] = @Original_ticketId) AND ([E_ticket] = @Original_E_ticket) AND ([availability] = @Original_availability));
SELECT ticketId, E_ticket, availability FROM Ticket WHERE (ticketId = @ticketId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@E_ticket" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="E_ticket" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@availability" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="availability" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ticketId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ticketId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_E_ticket" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="E_ticket" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_availability" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="availability" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="ticketId" ColumnName="ticketId" DataSourceName="[5D11E7DA0521CF5E99DDCEB62ADB8904_OCUMENTS\SEMESTER 3\OOP 2\FINALPROJ\FINALOOP2PROJECT\FINALOOP2PROJECT\MOVIE_FINALDB_PROJECT.MDF].dbo.Ticket" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@ticketId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ticketId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ticketId" DataSetColumn="ticketId" />
              <Mapping SourceColumn="E_ticket" DataSetColumn="E_ticket" />
              <Mapping SourceColumn="availability" DataSetColumn="availability" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="UserTableAdapter" GeneratorDataComponentClassName="UserTableAdapter" Name="User" UserDataComponentName="UserTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="Movie_FinalDB_ProjectConnectionString (Settings)" DbObjectName="dbo.[User]" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[User] WHERE (([UserId] = @Original_UserId) AND ((@IsNull_Username = 1 AND [Username] IS NULL) OR ([Username] = @Original_Username)) AND ((@IsNull_Password = 1 AND [Password] IS NULL) OR ([Password] = @Original_Password)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_UserId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UserId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Username" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Username" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Username" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Username" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Password" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Password" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Password" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Password" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[User] ([UserId], [Username], [Password]) VALUES (@UserId, @Username, @Password);
SELECT UserId, Username, Password FROM [User] WHERE (UserId = @UserId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@UserId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UserId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Username" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Username" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Password" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Password" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT UserId, Username, Password FROM dbo.[User]</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[User] SET [UserId] = @UserId, [Username] = @Username, [Password] = @Password WHERE (([UserId] = @Original_UserId) AND ((@IsNull_Username = 1 AND [Username] IS NULL) OR ([Username] = @Original_Username)) AND ((@IsNull_Password = 1 AND [Password] IS NULL) OR ([Password] = @Original_Password)));
SELECT UserId, Username, Password FROM [User] WHERE (UserId = @UserId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@UserId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UserId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Username" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Username" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Password" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Password" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_UserId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UserId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Username" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Username" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Username" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Username" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Password" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Password" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Password" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Password" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="UserId" DataSetColumn="UserId" />
              <Mapping SourceColumn="Username" DataSetColumn="Username" />
              <Mapping SourceColumn="Password" DataSetColumn="Password" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="Movie_FinalDB_ProjectDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:Generator_UserDSName="Movie_FinalDB_ProjectDataSet" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="Movie_FinalDB_ProjectDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Manager" msprop:Generator_RowEvHandlerName="ManagerRowChangeEventHandler" msprop:Generator_RowDeletedName="ManagerRowDeleted" msprop:Generator_RowDeletingName="ManagerRowDeleting" msprop:Generator_RowEvArgName="ManagerRowChangeEvent" msprop:Generator_TablePropName="Manager" msprop:Generator_RowChangedName="ManagerRowChanged" msprop:Generator_UserTableName="Manager" msprop:Generator_RowChangingName="ManagerRowChanging" msprop:Generator_RowClassName="ManagerRow" msprop:Generator_TableClassName="ManagerDataTable" msprop:Generator_TableVarName="tableManager">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ManagerID" msprop:Generator_ColumnPropNameInTable="ManagerIDColumn" msprop:Generator_ColumnPropNameInRow="ManagerID" msprop:Generator_UserColumnName="ManagerID" msprop:Generator_ColumnVarNameInTable="columnManagerID" type="xs:int" />
              <xs:element name="ManagerUsername" msprop:Generator_ColumnPropNameInTable="ManagerUsernameColumn" msprop:Generator_ColumnPropNameInRow="ManagerUsername" msprop:Generator_UserColumnName="ManagerUsername" msprop:Generator_ColumnVarNameInTable="columnManagerUsername" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="ManagerPassword" msprop:Generator_ColumnPropNameInTable="ManagerPasswordColumn" msprop:Generator_ColumnPropNameInRow="ManagerPassword" msprop:Generator_UserColumnName="ManagerPassword" msprop:Generator_ColumnVarNameInTable="columnManagerPassword" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Movies" msprop:Generator_RowEvHandlerName="MoviesRowChangeEventHandler" msprop:Generator_RowDeletedName="MoviesRowDeleted" msprop:Generator_RowDeletingName="MoviesRowDeleting" msprop:Generator_RowEvArgName="MoviesRowChangeEvent" msprop:Generator_TablePropName="Movies" msprop:Generator_RowChangedName="MoviesRowChanged" msprop:Generator_UserTableName="Movies" msprop:Generator_RowChangingName="MoviesRowChanging" msprop:Generator_RowClassName="MoviesRow" msprop:Generator_TableClassName="MoviesDataTable" msprop:Generator_TableVarName="tableMovies">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="MovieId" msprop:Generator_ColumnPropNameInTable="MovieIdColumn" msprop:Generator_ColumnPropNameInRow="MovieId" msprop:Generator_UserColumnName="MovieId" msprop:Generator_ColumnVarNameInTable="columnMovieId" type="xs:int" />
              <xs:element name="MovieName" msprop:Generator_ColumnPropNameInTable="MovieNameColumn" msprop:Generator_ColumnPropNameInRow="MovieName" msprop:Generator_UserColumnName="MovieName" msprop:Generator_ColumnVarNameInTable="columnMovieName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Genre" msprop:Generator_ColumnPropNameInTable="GenreColumn" msprop:Generator_ColumnPropNameInRow="Genre" msprop:Generator_UserColumnName="Genre" msprop:Generator_ColumnVarNameInTable="columnGenre">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="DateOfRelease" msprop:Generator_ColumnPropNameInTable="DateOfReleaseColumn" msprop:Generator_ColumnPropNameInRow="DateOfRelease" msprop:Generator_UserColumnName="DateOfRelease" msprop:Generator_ColumnVarNameInTable="columnDateOfRelease" type="xs:int" />
              <xs:element name="Actors" msprop:Generator_ColumnPropNameInTable="ActorsColumn" msprop:Generator_ColumnPropNameInRow="Actors" msprop:Generator_UserColumnName="Actors" msprop:Generator_ColumnVarNameInTable="columnActors">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="MovieTicketUser" msprop:Generator_RowEvHandlerName="MovieTicketUserRowChangeEventHandler" msprop:Generator_RowDeletedName="MovieTicketUserRowDeleted" msprop:Generator_RowDeletingName="MovieTicketUserRowDeleting" msprop:Generator_RowEvArgName="MovieTicketUserRowChangeEvent" msprop:Generator_TablePropName="MovieTicketUser" msprop:Generator_RowChangedName="MovieTicketUserRowChanged" msprop:Generator_UserTableName="MovieTicketUser" msprop:Generator_RowChangingName="MovieTicketUserRowChanging" msprop:Generator_RowClassName="MovieTicketUserRow" msprop:Generator_TableClassName="MovieTicketUserDataTable" msprop:Generator_TableVarName="tableMovieTicketUser">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="MovieId" msprop:Generator_ColumnPropNameInTable="MovieIdColumn" msprop:Generator_ColumnPropNameInRow="MovieId" msprop:Generator_UserColumnName="MovieId" msprop:Generator_ColumnVarNameInTable="columnMovieId" type="xs:int" />
              <xs:element name="TicketId" msprop:Generator_ColumnPropNameInTable="TicketIdColumn" msprop:Generator_ColumnPropNameInRow="TicketId" msprop:Generator_UserColumnName="TicketId" msprop:Generator_ColumnVarNameInTable="columnTicketId" type="xs:int" />
              <xs:element name="UserId" msprop:Generator_ColumnPropNameInTable="UserIdColumn" msprop:Generator_ColumnPropNameInRow="UserId" msprop:Generator_UserColumnName="UserId" msprop:Generator_ColumnVarNameInTable="columnUserId" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="ScreenRoom" msprop:Generator_RowEvHandlerName="ScreenRoomRowChangeEventHandler" msprop:Generator_RowDeletedName="ScreenRoomRowDeleted" msprop:Generator_RowDeletingName="ScreenRoomRowDeleting" msprop:Generator_RowEvArgName="ScreenRoomRowChangeEvent" msprop:Generator_TablePropName="ScreenRoom" msprop:Generator_RowChangedName="ScreenRoomRowChanged" msprop:Generator_UserTableName="ScreenRoom" msprop:Generator_RowChangingName="ScreenRoomRowChanging" msprop:Generator_RowClassName="ScreenRoomRow" msprop:Generator_TableClassName="ScreenRoomDataTable" msprop:Generator_TableVarName="tableScreenRoom">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ScreenRoomId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInTable="ScreenRoomIdColumn" msprop:Generator_ColumnPropNameInRow="ScreenRoomId" msprop:Generator_UserColumnName="ScreenRoomId" msprop:Generator_ColumnVarNameInTable="columnScreenRoomId" type="xs:int" />
              <xs:element name="MovieId" msprop:Generator_ColumnPropNameInTable="MovieIdColumn" msprop:Generator_ColumnPropNameInRow="MovieId" msprop:Generator_UserColumnName="MovieId" msprop:Generator_ColumnVarNameInTable="columnMovieId" type="xs:int" />
              <xs:element name="RoomNo" msprop:Generator_ColumnPropNameInTable="RoomNoColumn" msprop:Generator_ColumnPropNameInRow="RoomNo" msprop:Generator_UserColumnName="RoomNo" msprop:Generator_ColumnVarNameInTable="columnRoomNo" type="xs:int" />
              <xs:element name="TotalSeatNo" msprop:Generator_ColumnPropNameInTable="TotalSeatNoColumn" msprop:Generator_ColumnPropNameInRow="TotalSeatNo" msprop:Generator_UserColumnName="TotalSeatNo" msprop:Generator_ColumnVarNameInTable="columnTotalSeatNo" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="ShowTime" msprop:Generator_RowEvHandlerName="ShowTimeRowChangeEventHandler" msprop:Generator_RowDeletedName="ShowTimeRowDeleted" msprop:Generator_RowDeletingName="ShowTimeRowDeleting" msprop:Generator_RowEvArgName="ShowTimeRowChangeEvent" msprop:Generator_TablePropName="ShowTime" msprop:Generator_RowChangedName="ShowTimeRowChanged" msprop:Generator_UserTableName="ShowTime" msprop:Generator_RowChangingName="ShowTimeRowChanging" msprop:Generator_RowClassName="ShowTimeRow" msprop:Generator_TableClassName="ShowTimeDataTable" msprop:Generator_TableVarName="tableShowTime">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ShowTimeId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInTable="ShowTimeIdColumn" msprop:Generator_ColumnPropNameInRow="ShowTimeId" msprop:Generator_UserColumnName="ShowTimeId" msprop:Generator_ColumnVarNameInTable="columnShowTimeId" type="xs:int" />
              <xs:element name="MovieId" msprop:Generator_ColumnPropNameInTable="MovieIdColumn" msprop:Generator_ColumnPropNameInRow="MovieId" msprop:Generator_UserColumnName="MovieId" msprop:Generator_ColumnVarNameInTable="columnMovieId" type="xs:int" />
              <xs:element name="ScreenRoomId" msprop:Generator_ColumnPropNameInTable="ScreenRoomIdColumn" msprop:Generator_ColumnPropNameInRow="ScreenRoomId" msprop:Generator_UserColumnName="ScreenRoomId" msprop:Generator_ColumnVarNameInTable="columnScreenRoomId" type="xs:int" />
              <xs:element name="Time" msprop:Generator_ColumnPropNameInTable="TimeColumn" msprop:Generator_ColumnPropNameInRow="Time" msprop:Generator_UserColumnName="Time" msprop:Generator_ColumnVarNameInTable="columnTime" type="xs:dateTime" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Ticket" msprop:Generator_RowEvHandlerName="TicketRowChangeEventHandler" msprop:Generator_RowDeletedName="TicketRowDeleted" msprop:Generator_RowDeletingName="TicketRowDeleting" msprop:Generator_RowEvArgName="TicketRowChangeEvent" msprop:Generator_TablePropName="Ticket" msprop:Generator_RowChangedName="TicketRowChanged" msprop:Generator_UserTableName="Ticket" msprop:Generator_RowChangingName="TicketRowChanging" msprop:Generator_RowClassName="TicketRow" msprop:Generator_TableClassName="TicketDataTable" msprop:Generator_TableVarName="tableTicket">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ticketId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInTable="ticketIdColumn" msprop:Generator_ColumnPropNameInRow="ticketId" msprop:Generator_UserColumnName="ticketId" msprop:Generator_ColumnVarNameInTable="columnticketId" type="xs:int" />
              <xs:element name="E_ticket" msprop:Generator_ColumnPropNameInTable="E_ticketColumn" msprop:Generator_ColumnPropNameInRow="E_ticket" msprop:Generator_UserColumnName="E_ticket" msprop:Generator_ColumnVarNameInTable="columnE_ticket" type="xs:int" />
              <xs:element name="availability" msprop:Generator_ColumnPropNameInTable="availabilityColumn" msprop:Generator_ColumnPropNameInRow="availability" msprop:Generator_UserColumnName="availability" msprop:Generator_ColumnVarNameInTable="columnavailability">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="User" msprop:Generator_RowEvHandlerName="UserRowChangeEventHandler" msprop:Generator_RowDeletedName="UserRowDeleted" msprop:Generator_RowDeletingName="UserRowDeleting" msprop:Generator_RowEvArgName="UserRowChangeEvent" msprop:Generator_TablePropName="User" msprop:Generator_RowChangedName="UserRowChanged" msprop:Generator_UserTableName="User" msprop:Generator_RowChangingName="UserRowChanging" msprop:Generator_RowClassName="UserRow" msprop:Generator_TableClassName="UserDataTable" msprop:Generator_TableVarName="tableUser">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="UserId" msprop:Generator_ColumnPropNameInTable="UserIdColumn" msprop:Generator_ColumnPropNameInRow="UserId" msprop:Generator_UserColumnName="UserId" msprop:Generator_ColumnVarNameInTable="columnUserId" type="xs:int" />
              <xs:element name="Username" msprop:Generator_ColumnPropNameInTable="UsernameColumn" msprop:Generator_ColumnPropNameInRow="Username" msprop:Generator_UserColumnName="Username" msprop:Generator_ColumnVarNameInTable="columnUsername" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Password" msprop:Generator_ColumnPropNameInTable="PasswordColumn" msprop:Generator_ColumnPropNameInRow="Password" msprop:Generator_UserColumnName="Password" msprop:Generator_ColumnVarNameInTable="columnPassword" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Manager" />
      <xs:field xpath="mstns:ManagerID" />
    </xs:unique>
    <xs:unique name="Movies_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Movies" />
      <xs:field xpath="mstns:MovieId" />
    </xs:unique>
    <xs:unique name="MovieTicketUser_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:MovieTicketUser" />
      <xs:field xpath="mstns:MovieId" />
      <xs:field xpath="mstns:TicketId" />
      <xs:field xpath="mstns:UserId" />
    </xs:unique>
    <xs:unique name="ScreenRoom_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:ScreenRoom" />
      <xs:field xpath="mstns:ScreenRoomId" />
    </xs:unique>
    <xs:unique name="ShowTime_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:ShowTime" />
      <xs:field xpath="mstns:ShowTimeId" />
    </xs:unique>
    <xs:unique name="Ticket_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Ticket" />
      <xs:field xpath="mstns:ticketId" />
    </xs:unique>
    <xs:unique name="User_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:User" />
      <xs:field xpath="mstns:UserId" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK_MovieTicketUser" msdata:parent="Ticket" msdata:child="MovieTicketUser" msdata:parentkey="ticketId" msdata:childkey="TicketId" msprop:Generator_UserParentTable="Ticket" msprop:Generator_UserChildTable="MovieTicketUser" msprop:Generator_RelationVarName="relationFK_MovieTicketUser" msprop:Generator_ChildPropName="GetMovieTicketUserRows" msprop:Generator_UserRelationName="FK_MovieTicketUser" msprop:Generator_ParentPropName="TicketRow" />
      <msdata:Relationship name="FK_ScreenRoom_Movie" msdata:parent="Movies" msdata:child="ScreenRoom" msdata:parentkey="MovieId" msdata:childkey="MovieId" msprop:Generator_UserParentTable="Movies" msprop:Generator_UserChildTable="ScreenRoom" msprop:Generator_RelationVarName="relationFK_ScreenRoom_Movie" msprop:Generator_ChildPropName="GetScreenRoomRows" msprop:Generator_ParentPropName="MoviesRow" msprop:Generator_UserRelationName="FK_ScreenRoom_Movie" />
      <msdata:Relationship name="fk_screenroom" msdata:parent="ScreenRoom" msdata:child="ShowTime" msdata:parentkey="ScreenRoomId" msdata:childkey="ScreenRoomId" msprop:Generator_UserParentTable="ScreenRoom" msprop:Generator_UserChildTable="ShowTime" msprop:Generator_RelationVarName="relationfk_screenroom" msprop:Generator_ChildPropName="GetShowTimeRows" msprop:Generator_ParentPropName="ScreenRoomRow" msprop:Generator_UserRelationName="fk_screenroom" />
      <msdata:Relationship name="User_MovieTicketUser" msdata:parent="User" msdata:child="MovieTicketUser" msdata:parentkey="UserId" msdata:childkey="UserId" msprop:Generator_UserParentTable="User" msprop:Generator_UserChildTable="MovieTicketUser" msprop:Generator_RelationVarName="relationUser_MovieTicketUser" msprop:Generator_ChildPropName="GetMovieTicketUserRows" msprop:Generator_ParentPropName="UserRow" msprop:Generator_UserRelationName="User_MovieTicketUser" />
      <msdata:Relationship name="Movies_MovieTicketUser" msdata:parent="Movies" msdata:child="MovieTicketUser" msdata:parentkey="MovieId" msdata:childkey="MovieId" msprop:Generator_UserParentTable="Movies" msprop:Generator_UserChildTable="MovieTicketUser" msprop:Generator_RelationVarName="relationMovies_MovieTicketUser" msprop:Generator_ChildPropName="GetMovieTicketUserRows" msprop:Generator_ParentPropName="MoviesRow" msprop:Generator_UserRelationName="Movies_MovieTicketUser" />
      <msdata:Relationship name="ShowTime_Movies" msdata:parent="ShowTime" msdata:child="Movies" msdata:parentkey="MovieId" msdata:childkey="MovieId" msprop:Generator_UserParentTable="ShowTime" msprop:Generator_UserChildTable="Movies" msprop:Generator_RelationVarName="relationShowTime_Movies" msprop:Generator_UserRelationName="ShowTime_Movies" msprop:Generator_ChildPropName="GetMoviesRows" msprop:Generator_ParentPropName="ShowTimeRow" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>